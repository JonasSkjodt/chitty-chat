syntax = "proto3";

option go_package = "github.com/JonasSkjodt/chitty-chat/proto";

package proto;

// compile command: (run from /chitty-chat/)
// USE THIS AFTER YOU ALTER AND SAVE THE PROTO FILE
// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/template.proto

/*
The Client: go run .\client\client.go
The Server: go run .\server\server.go

go run .\client\ alice
*/

// The template service definition.
// you can call it whatever you want
// service Template
// {
//     // one message is sent and one is recieved
//     rpc Increment (Amount) returns (Ack);

//     // many messages are sent and one is recieved
//     rpc SayHi (stream Greeding) returns (Farewell);
// }

service Chat {
    rpc MessageStream(stream ChatMessage) returns (stream ChatMessage);
    rpc ConnectToServer(stream ChatMessage) returns (Ack);
    rpc DisconnectFromServer(ClientName) returns (Ack);
}

// Amount is a type containing a string and int. They are intialized as the first and second parameter value.

message Ack {
    string message = 1;
}

message ChatMessage {
    string clientName = 1;
    string content = 2; // Content field that should be limited to max 128 characters
    int32 clientID = 3;
    repeated int32 vectorClock = 4;
}

message ClientName {
    string clientName = 1;
}

message ClientID {
    int32 clientID = 1;
}

